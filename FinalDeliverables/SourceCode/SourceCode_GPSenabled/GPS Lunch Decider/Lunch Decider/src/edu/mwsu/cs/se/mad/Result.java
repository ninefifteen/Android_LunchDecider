package edu.mwsu.cs.se.mad;

/**
 * The  Result class constructs the user interface that displays
 * the name and address information of the restaurant that is choose as
 * winner by the Plinko game interface.
 * The interface implements a button that enables users to open a Google map application
 * that shows the driving direction of the restaurant.
 * Interface also implements buttons that allows  users to return to the 
 * UserSelection screen 
 */
import android.app.Activity;
import android.content.Intent;
import android.location.Location;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import edu.mwsu.cs.se.mad.common.Restaurant;
import edu.mwsu.cs.se.mad.common.RestaurantSearchManager;
import edu.mwsu.cs.se.mad.common.UserLocationManager;

public class Result extends Activity {

	/**
	 * java object instance of the textView to display the name of the
	 * restaurant
	 */
	TextView title;
	/**
	 * java object instance of the textView to display the street address
	 */
	TextView addressStreePart;
	/**
	 * java object instance of the textView to display the city and state
	 */
	TextView addressCityPart;
	/**
	 * java object instance of the textView to display the phone number
	 */
	TextView phone;
	/**
	 * java object instance of the button closes the result screen and takes the
	 * user back to the UserSelection
	 */
	Button playAgain;
	/**
	 * java object instance of the button that opens the Google map application
	 * using the browser
	 */
	Button showDirection;

	/** Called when the activity is first created. */
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.result);
		/*
		 * gets the resource from the xml layout and assigns to the java
		 * representation of the resource
		 */
		title = (TextView) getItemById(R.id.rest_Title);
		addressStreePart = (TextView) getItemById(R.id.rest_adress_firt_part);
		addressCityPart = (TextView) getItemById(R.id.rest_adress_second_part);
		phone = (TextView) getItemById(R.id.rest_phone);
		playAgain = (Button) getItemById(R.id.play_again);
		showDirection = (Button) getItemById(R.id.show_map);

		/**
		 * Get the winning restaurant. The winning restaurant is placed at index
		 * zero
		 */
		Restaurant r = RestaurantSearchManager.getRestaurantList().get(0);
		/**
		 * set the restaurants info onto the textViews
		 */
		title.setText(r.getTitle());
		addressStreePart.setText(r.getAddress1());
		addressCityPart.setText(r.getAddress2());
		phone.setText(r.getPhone());
		/**
		 * set the listener classes to the buttons
		 */
		playAgain.setOnClickListener(new PlayAgainListener());
		showDirection.setOnClickListener(new ShowDirectionListener());
	}

	/**
	 * Gets the item from the XML file that defines the view as a View object
	 * having the id specified by the itemId parameter
	 * 
	 * @param itemId
	 *            The item Id to be checked by the
	 * @return the view object that matches the id
	 */
	private View getItemById(int itemId) {

		return findViewById(itemId);
	}

	/**
	 * The listener class for the playAgain button. The method implements the
	 * OnclickListener interface and the method onClick, the call back method
	 * that is called when a click event is generated by the button.
	 * 
	 */
	class PlayAgainListener implements OnClickListener {

		/**
		 * The call back method that handles the click event. The method closes
		 * the Result screen and takes the user back to the UserSelection screen
		 * */
		@Override
		public void onClick(View v) {
			Result.this.finish();
		}

	}

	/**
	 * The listener class for the ShowDirection button. The method implements
	 * the OnclickListener interface and the method onClick, the call back
	 * method that is called when a click event is generated by the button.
	 * 
	 */
	class ShowDirectionListener implements OnClickListener {
		// String builder that contains the URI of the google map app.
		private StringBuilder mapBuilder = new StringBuilder();
		// users current location (lat and long)
		private Location userLocation = UserLocationManager
				.getFinalLocationShared();
		// restaurant location(lat and long)
		private Restaurant restaurantLocation = RestaurantSearchManager
				.getRestaurantList().get(0);
		// build the users location string according to Google's format
		private String startAddress = userLocation.getLatitude() + ","
				+ userLocation.getLongitude();
		// build the restaurant location string according to Google's format
		private String destinationAddress = restaurantLocation.getLatitude()
				+ "," + restaurantLocation.getLongitude();
		// constant representing the start address key in the URI
		private final String START_ADD_KEY = "saddr";
		// constant representing the destination address key in the URI
		private final String DEST_ADD_KEY = "daddr";

		/**
		 * The call back method that handles the click event. The method builds
		 * the URI and opens the google maps app using a browser.
		 * */
		@Override
		public void onClick(View v) {

			mapBuilder.append("http://maps.google.com/maps?");
			mapBuilder.append(START_ADD_KEY);
			mapBuilder.append("=");
			mapBuilder.append(startAddress);
			mapBuilder.append("&");
			mapBuilder.append(DEST_ADD_KEY);
			mapBuilder.append("=");
			mapBuilder.append(destinationAddress);
			// starts the google map app
			startNewActivity(android.content.Intent.ACTION_VIEW,
					Uri.parse(mapBuilder.toString()));
		}
	}

	/**
	 * The startNewActivity creates a new activity using the current activity
	 * defined by the activityURI argument
	 * 
	 * @param currentContext
	 *            the current context to be used for creating the new activity
	 * @param activityURI
	 *            the URI for new activity
	 */
	private void startNewActivity(String intentAction, Uri activityURI) {

		Intent intent = new Intent(intentAction, activityURI);
		startActivity(intent);
	}
}
